<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="8" total="15" passed="6" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-11-02T17:35:26 EET" name="Default suite" finished-at="2020-11-02T17:38:34 EET" duration-ms="188763">
    <groups>
    </groups>
    <test started-at="2020-11-02T17:35:26 EET" name="Default test" finished-at="2020-11-02T17:38:34 EET" duration-ms="188763">
      <class name="tests.Login">
        <test-method signature="LoginTest()[pri:0, instance:tests.Login@75437611]" started-at="2020-11-02T17:35:58 EET" name="LoginTest" finished-at="2020-11-02T17:36:24 EET" duration-ms="25523" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginTest -->
      </class> <!-- tests.Login -->
      <class name="tests.TabbedPage.OpenMedicalHisoryPage">
        <test-method signature="OpenMedicalHisoryPage()[pri:0, instance:tests.TabbedPage.OpenMedicalHisoryPage@350aac89]" started-at="2020-11-02T17:36:24 EET" name="OpenMedicalHisoryPage" finished-at="2020-11-02T17:36:34 EET" duration-ms="10261" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenMedicalHisoryPage -->
      </class> <!-- tests.TabbedPage.OpenMedicalHisoryPage -->
      <class name="tests.MedicalHistory.AddProcedure">
        <test-method signature="OpenAddNewPage()[pri:1, instance:tests.MedicalHistory.AddProcedure@1c5920df]" started-at="2020-11-02T17:36:34 EET" name="OpenAddNewPage" finished-at="2020-11-02T17:37:03 EET" duration-ms="29254" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenAddNewPage -->
        <test-method signature="OpenLabPage()[pri:2, instance:tests.MedicalHistory.AddProcedure@1c5920df]" started-at="2020-11-02T17:37:09 EET" name="OpenLabPage" finished-at="2020-11-02T17:37:45 EET" duration-ms="36536" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenLabPage -->
        <test-method signature="addDataRadfields()[pri:3, instance:tests.MedicalHistory.AddProcedure@1c5920df]" started-at="2020-11-02T17:37:51 EET" name="addDataRadfields" finished-at="2020-11-02T17:38:25 EET" duration-ms="33675" status="FAIL">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'ADS107-AHQ', ip: '10.24.100.228', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '13.0.2'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {app: C:\Users\marwan.hemeda\ecli..., appPackage: net.andalusiagroup.andalusi..., automationName: UiAutomator2, databaseEnabled: false, desired: {app: C:\Users\marwan.hemeda\ecli..., automationName: UiAutomator2, newCommandTimeout: 12000, platformName: android, udid: emulator-5554, unicodeKeyboard: true}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: sdk_gphone_x86_arm, deviceName: emulator-5554, deviceScreenDensity: 400, deviceScreenSize: 1080x2160, deviceUDID: emulator-5554, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 12000, pixelRatio: 2.5, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 60, takesScreenshot: true, udid: emulator-5554, unicodeKeyboard: true, viewportRect: {height: 1980, left: 0, top: 60, width: 1080}, warnings: {}, webStorageEnabled: false}
Session ID: 36eea885-d474-4f01-9884-f596b28ac11c
*** Element info: {Using=xpath, value=//android.view.ViewGroup[2]/android.widget.TextView}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'ADS107-AHQ', ip: '10.24.100.228', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '13.0.2'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {app: C:\Users\marwan.hemeda\ecli..., appPackage: net.andalusiagroup.andalusi..., automationName: UiAutomator2, databaseEnabled: false, desired: {app: C:\Users\marwan.hemeda\ecli..., automationName: UiAutomator2, newCommandTimeout: 12000, platformName: android, udid: emulator-5554, unicodeKeyboard: true}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: sdk_gphone_x86_arm, deviceName: emulator-5554, deviceScreenDensity: 400, deviceScreenSize: 1080x2160, deviceUDID: emulator-5554, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 12000, pixelRatio: 2.5, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 60, takesScreenshot: true, udid: emulator-5554, unicodeKeyboard: true, viewportRect: {height: 1980, left: 0, top: 60, width: 1080}, warnings: {}, webStorageEnabled: false}
Session ID: 36eea885-d474-4f01-9884-f596b28ac11c
*** Element info: {Using=xpath, value=//android.view.ViewGroup[2]/android.widget.TextView}
at io.appium.java_client.pagefactory.AppiumElementLocator$WaitingFunction.apply(AppiumElementLocator.java:192)
at io.appium.java_client.pagefactory.AppiumElementLocator$WaitingFunction.apply(AppiumElementLocator.java:1)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
at io.appium.java_client.pagefactory.AppiumElementLocator.waitFor(AppiumElementLocator.java:99)
at io.appium.java_client.pagefactory.AppiumElementLocator.findElement(AppiumElementLocator.java:119)
at io.appium.java_client.pagefactory.interceptors.InterceptorOfASingleElement.intercept(InterceptorOfASingleElement.java:59)
at io.appium.java_client.android.AndroidElement$$EnhancerByCGLIB$$b598166c.click(<generated>)
at pages.MedicalHistory.Procedure.ClickonSaveIcon(Procedure.java:64)
at tests.MedicalHistory.AddProcedure.addDataRadfields(AddProcedure.java:32)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1507)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'ADS107-AHQ', ip: '10.24.100.228', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '13.0.2'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {app: C:\Users\marwan.hemeda\ecli..., appPackage: net.andalusiagroup.andalusi..., automationName: UiAutomator2, databaseEnabled: false, desired: {app: C:\Users\marwan.hemeda\ecli..., automationName: UiAutomator2, newCommandTimeout: 12000, platformName: android, udid: emulator-5554, unicodeKeyboard: true}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: sdk_gphone_x86_arm, deviceName: emulator-5554, deviceScreenDensity: 400, deviceScreenSize: 1080x2160, deviceUDID: emulator-5554, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 12000, pixelRatio: 2.5, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 60, takesScreenshot: true, udid: emulator-5554, unicodeKeyboard: true, viewportRect: {height: 1980, left: 0, top: 60, width: 1080}, warnings: {}, webStorageEnabled: false}
Session ID: 36eea885-d474-4f01-9884-f596b28ac11c
*** Element info: {Using=xpath, value=//android.view.ViewGroup[2]/android.widget.TextView}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:239)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:41)
at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:61)
at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:151)
at io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:57)
at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
at io.appium.java_client.pagefactory.bys.builder.ByChained.lambda$0(ByChained.java:38)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
at io.appium.java_client.pagefactory.bys.builder.ByChained.findElement(ByChained.java:72)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:57)
at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
at io.appium.java_client.pagefactory.bys.ContentMappedBy.findElement(ContentMappedBy.java:50)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:57)
at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
at io.appium.java_client.pagefactory.AppiumElementLocator.lambda$0(AppiumElementLocator.java:120)
at io.appium.java_client.pagefactory.AppiumElementLocator$WaitingFunction.apply(AppiumElementLocator.java:172)
... 36 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addDataRadfields -->
      </class> <!-- tests.MedicalHistory.AddProcedure -->
      <class name="tests.SplashScreen">
        <test-method is-config="true" signature="getAndroidDriver()[pri:0, instance:tests.SplashScreen@7bba5817]" started-at="2020-11-02T17:35:05 EET" name="getAndroidDriver" finished-at="2020-11-02T17:35:26 EET" duration-ms="20720" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAndroidDriver -->
        <test-method signature="splachScreen()[pri:0, instance:tests.SplashScreen@7bba5817]" started-at="2020-11-02T17:35:26 EET" name="splachScreen" finished-at="2020-11-02T17:35:38 EET" duration-ms="12401" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- splachScreen -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.SplashScreen@7bba5817]" started-at="2020-11-02T17:38:35 EET" name="tearDown" finished-at="2020-11-02T17:38:35 EET" duration-ms="163" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.SplashScreen -->
      <class name="tests.TabbedPage.OpenProfilePage">
        <test-method signature="OpenProfilePage()[pri:0, instance:tests.TabbedPage.OpenProfilePage@742ff096]" started-at="2020-11-02T17:35:38 EET" name="OpenProfilePage" finished-at="2020-11-02T17:35:58 EET" duration-ms="19996" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenProfilePage -->
      </class> <!-- tests.TabbedPage.OpenProfilePage -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
